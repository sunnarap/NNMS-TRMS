-- Create Initial table
CREATE OR REPLACE TABLE USERS(
    USERID NUMBER PRIMARY KEY,
    FNAME VARCHAR2(30) NOT NULL,
    LNAME VARCHAR2(30) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(100) NOT NULL,
    TID NUMBER NOT NULL
);

CREATE OR REPLACE TABLE USER_TITLE(
	TID NUMBER PRIMARY KEY,
	TITLE VARCHAR2(50)
);

CREATE OR REPLACE TABLE REIMBURSEMENT(
	RID NUMBER PRIMARY KEY,
	LOC VARCHAR2(200) NOT NULL,
    START_DATE TIMESTAMP NOT NULL,
    SUBMIT_DATE TIMESTAMP,
    FINISHED TIMESTAMP,
    AMOUNT NUMBER NOT NULL,
    STATUS VARCHAR2(20) NOT NULL,
    DESCRIPTION VARCHAR2(300),
    JUSTIFICATION VARCHAR2(300),
    CID NUMBER NOT NULL,
    USERID NUMBER NOT NULL,
    WORKER NUMBER NOT NULL
);

CREATE OR REPLACE TABLE COVERAGES(
    CID NUMBER PRIMARY KEY,
    CTYPE VARCHAR2(100)
);

--Foreign Key Constraints
ALTER TABLE USERS
	ADD CONSTRAINT FK_TABLE_ID
	FOREIGN KEY (TID) REFERENCES USER_TITLE(TID);

ALTER TABLE REIMBURSEMENT
    ADD CONSTRAINT FK_COVER_ID
    FOREIGN KEY (CID) REFERENCES COVERAGES(CID);
    
ALTER TABLE REIMBURSEMENT
    ADD CONSTRAINT FK_USER_ID
    FOREIGN KEY (USERID) REFERENCES USERS(USERID);
    
ALTER TABLE REIMBURSEMENT
    ADD CONSTRAINT FK_WORKER
    FOREIGN KEY (WORKER) REFERENCES USERS(USERID);
    

--Sequences
CREATE SEQUENCE USERIDSEQUENCE;
CREATE SEQUENCE RIDSEQUENCE;

--Stored Procedures
CREATE OR REPLACE PROCEDURE CREATE_USER(F_NAME IN VARCHAR2,
L_NAME IN VARCHAR2,E_MAIL IN VARCHAR2,PASS_WORD IN VARCHAR2, T_ID IN INTEGER)
AS BEGIN
INSERT INTO USERS VALUES(USERIDSEQUENCE.NEXTVAL,F_NAME,
L_NAME,E_MAIL,PASS_WORD,(SELECT TID FROM USER_TITLE WHERE TID = T_ID));
COMMIT;
END;
/ 

CREATE OR REPLACE PROCEDURE DELETE_USER(E_MAIL IN VARCHAR2)
AS BEGIN
DELETE FROM USERS U WHERE U.EMAIL = E_MAIL;
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE CREATE_REIMBURSEMENT
(L IN VARCHAR2,AMT IN NUMBER,STS IN VARCHAR2,
D IN VARCHAR2,J IN VARCHAR2,C_ID IN NUMBER, U_ID IN NUMBER, W IN NUMBER)
AS BEGIN
INSERT INTO REIMBURSEMENT VALUES (RIDSEQUENCE.NEXTVAL,L,GET_TIME,
GET_TIME,GET_TIME,AMT,STS,D,J,(SELECT CID FROM COVERAGES WHERE CID = C_ID),
(SELECT USERID FROM USERS WHERE USERID = U_ID),
(SELECT USERID FROM USERS WHERE USERID = W));
COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE DELETE_REIMBURSEMENT(R_ID IN NUMBER)
AS BEGIN
DELETE FROM REIMBURSEMENT WHERE RID = R_ID;
COMMIT;
END;
/

--Functions
CREATE OR REPLACE FUNCTION GET_TIME RETURN TIMESTAMP
AS
CURR_TIME TIMESTAMP;
BEGIN
SELECT LOCALTIMESTAMP INTO CURR_TIME FROM DUAL;
RETURN CURR_TIME;
END;
/

SELECT GET_TIME FROM DUAL;

--Preinserted data
INSERT INTO USER_TITLE VALUES(1, 'Employee');
INSERT INTO USER_TITLE VALUES(2, 'Direct Supervisor');
INSERT INTO USER_TITLE VALUES(3, 'Department Head');
INSERT INTO USER_TITLE VALUES(4, 'Benefit Coordinator');
INSERT INTO USER_TITLE VALUES(5, 'BenCo Direct Supervisor');
INSERT INTO USER_TITLE VALUES(6, 'Direct Manager');

INSERT INTO COVERAGES VALUES(1, 'University Courses');
INSERT INTO COVERAGES VALUES(2, 'Seminar');
INSERT INTO COVERAGES VALUES(3, 'Certification Preparation');
INSERT INTO COVERAGES VALUES(4, 'Certification');
INSERT INTO COVERAGES VALUES(5, 'Technical Training');
INSERT INTO COVERAGES VALUES(6, 'OTHERS');



